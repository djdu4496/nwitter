{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","console","log","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b691bf8.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app' // 'firebase/compat/app'에 포함된 모든 모듈을 firebase라는 객체에 부여한다\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\"\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY, // process.env === .env 파일을 읽어 파일 안에 있는 변수값을 불러오라\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\n\n// export default firebase.initializeApp(firebaseConfig); \n// firebase.initializeApp === initializeApp 함수를 firebase 객체에서 꺼내 사용한다\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport { useState } from 'react'\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const { target: {name, value} } = event;\n        if(name === \"email\"){\n            setEmail(value)\n        }\n        else if(name === \"password\"){\n            setPassword(value)\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount){\n                // create newAccount\n                data = await authService.createUserWithEmailAndPassword(email, password)\n            }\n            else {\n                // log in\n                data = await authService.signInWithEmailAndPassword(email, password)\n            }\n        }\n        catch (error){\n            setError(error.message)\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev)\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input \n                name=\"email\"\n                type=\"email\" \n                placeholder=\"Email\" \n                required \n                value={email}\n                onChange={onChange}\n                />\n                <input \n                name=\"password\"\n                type=\"password\" \n                placeholder=\"Password\" \n                required \n                value={password}\n                onChange={onChange}\n                />\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n                {error}\n            </form>\n            <span onClick={toggleAccount}>\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    )\n};\n\n\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\"\n\nconst Auth = () => {\n\n    const onSocialClick = async (event) => {\n        const { target: { name } } = event;\n        let provider;\n        if(name === \"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }\n        else if(name === \"github\"){\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n    }\n    return (\n        <div>\n            <AuthForm />\n            <div>\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { useState } from 'react';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm('삭제하시겠습니까?');\n        \n        if(ok){\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if(nweetObj.attachmentUrl !== \"\"){\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n            }\n        }\n    }\n\n    const toggleEditing = () => setEditing((prev) => !prev)\n\n    const onChange = (event) => {\n        const { target : { value }} = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        // console.log(nweetObj.id, newNweet);\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet})\n        setEditing(false);\n    }\n    \n    return (\n        <div>\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit}>\n                        <input onChange={onChange}value={newNweet} required />\n                        <input type=\"submit\" value=\"Updata Nweet\" />\n                    </form>\n                    <button onClick={toggleEditing}>Cancel</button>\n                </>\n            ) : (            \n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n                    )}\n                    {isOwner && ( // isOwner가 true일때만 버튼이 나타남\n                        <>\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\n                            <button onClick={toggleEditing}>Edit Nweet</button>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    )\n}\n\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState('');\n    const [attachment, setAttachment] = useState('');\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\"){\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`)\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        });\n        setNweet(\"\");\n        setAttachment();\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const { target: { value }, } = event; // let value = event.target.value;\n        setNweet(value)\n    };\n\n    const onFileChange = (event) => {\n        const { target : { files }, } = event;\n        const theFile = files[0]\n        const reader = new FileReader(); // 브라우저 API\n        reader.onloadend = (finishedEvent) => {\n            const { currentTarget : { result },} = finishedEvent;\n            setAttachment(result)\n        }\n        reader.readAsDataURL(theFile);\n    }\n    \n    const onClearAttachment = () => setAttachment('');\n\n    return (\n        <form onSubmit={onSubmit}>\n        <input \n            value={nweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"What's on your mind?\"\n            maxLength={120}\n        />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        <input type=\"submit\" value=\"Nweet\" />\n        {attachment && (\n            <div>\n                <img src={attachment} width=\"50px\" height=\"50px\" />\n                <button onClick={onClearAttachment}>Clear</button>\n            </div>\n        )}\n        \n    </form>\n    )\n};\n\nexport default NweetFactory;","import { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\n\nconst Home = ({ userObj }) => {\n    // console.log(userObj)\n    const [nweets, setNweets] = useState([]);\n\n\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const newArray = snapshot.docs.map((document) => ({\n                id: document.id,\n                ...document.data(),\n            }));\n            setNweets(newArray);\n        })\n    }, []);\n\n    \n\n\n\n    return (\n        <>\n        < NweetFactory userObj={userObj} />\n        <div>\n            {nweets.map((nweet) => (\n                <Nweet \n                key={nweet.id} \n                nweetObj={nweet}\n                isOwner={nweet.creatorId === userObj.uid}\n                />\n            ))}\n        </div>\n        </>\n    );\n};\n\nexport default Home;","import { authService, dbService } from \"fbase\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ userObj, refreshUser }) => {\n    console.log(userObj)\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    }\n\n    const onChange= (event) => {\n        const { target : { value } } = event;\n        setNewDisplayName(value);\n    }\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName){\n            await userObj.updateProfile({ displayName: newDisplayName })\n            refreshUser();\n        }\n        \n    }\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input \n                onChange={onChange}\n                type=\"text\" \n                placeholder=\"Display name\"\n                value={newDisplayName}\n                />\n                <input type=\"submit\" value=\"Update Profile\" />\n            </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n};\n\nexport default Profile;","import { Link } from 'react-router-dom'\n\nconst Navigation = ( { userObj } ) => {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to='/'>Home</Link>\n                </li>\n                <li>\n                    <Link to='/profile'>{userObj.displayName}의Profile</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navigation;","import {HashRouter as Router, Route, Switch} from 'react-router-dom';\n// import { Redirecet } from 'react-router-dom';\nimport Auth from 'routes/Auth'\nimport Home from 'routes/Home'\nimport Profile from 'routes/Profile';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {\n                    isLoggedIn ? (\n                        <> \n                        <Route exact path='/'>\n                            <Home userObj={userObj} />\n                        </Route>  \n                        <Route exact path='/profile'>\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\n                        </Route>\n                        </>\n                    ) : (\n                        <Route exact path='/'>\n                            <Auth />\n                        </Route>\n                    )\n                }\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;\n","import { useState, useEffect } from 'react'\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }\n      else{\n        setUserObj(false)\n      }\n      setInit(true);\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <>\n    { init ? (\n       <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> \n       ): (\n         \"initializing...\" \n         )}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App'; // 파일 위치를 업데이트했다.\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}